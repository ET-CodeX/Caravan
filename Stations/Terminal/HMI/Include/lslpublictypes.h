//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
#RE_IN_DE
#pragma define (store)
_IPConfigIF : CLASS_PUBLIC
	TYPE
	  t_e_IF_NET_MODE :
	  (
	    IF_undef,
	    IF_InitDeviceIP,
	    IF_DeviceIP,
	    IF_SoftwareIP
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
_IPConfigStation : CLASS_PUBLIC
#include <.\LoaderItf.h>
	TYPE
	  DirtyFlags : BDINT
	  [
	    1 IPaddress,
	    2 Subnet,
	    3 Gateway,
	    4 Bit4,
	    5 Bit5,
	    6 Bit6,
	    7 Bit7,
	    8 Bit8,
	    9 Bit9,
	    10 Bit10,
	    11 Bit11,
	    12 Bit12,
	    13 Bit13,
	    14 Bit14,
	    15 Bit15,
	    16 Bit16,
	    17 Bit17,
	    18 Bit18,
	    19 Bit19,
	    20 Bit20,
	    21 Bit21,
	    22 Bit22,
	    23 Bit23,
	    24 Bit24,
	    25 Bit25,
	    26 Bit26,
	    27 Bit27,
	    28 Bit28,
	    29 Bit29,
	    30 Bit30,
	    31 Bit31,
	    32 Bit32,
	  ];
	  t_e_NET_MODE :
	  (
	    undef,
	    InitDeviceIP,
	    DeviceIP,
	    SoftwareIP
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
_XMLReader : CLASS_PUBLIC
	TYPE
	  _XML_PARSE_ERROR :
	  (
	    _PARSE_ERR_NONE,
	    _PARSE_ERR_NO_HEADER,
	    _PARSE_ERR_UNEXPECTED_SIGN,
	    _PARSE_ERR_WRONG_SEQUENCE,
	    _PARSE_ERR_ATTRIBUTE_TWICE
	  )$UDINT;
	  XML_READ_STATE :
	  (
	    _READY,
	    _FILE_OPENING,
	    _FILE_OPENED,
	    _FILE_GET_LENGTH,
	    _FILE_GOT_LENGTH,
	    _FILE_READING,
	    _FILE_READ,
	    _FILE_CLOSING,
	    _FILE_CLOSED,
	    _STRUCT_CREATING,
	    _STRUCT_CREATED,
	    _ERROR,
	    _PARSE_STREAM
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
_XMLStructCreator : CLASS_PUBLIC
	TYPE
	  _XML_STRUCT_ERR :
	  (
	    _NO_ERROR,
	    _MEM_ERROR
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
DataManagerFIFO : CLASS_PUBLIC
	TYPE
#pragma pack(push, 1)
	  t_s_Header : STRUCT
	    Prio : DINT;
	    Timeout : UDINT;
	    Timestamp : UDINT;
	    JobID : DINT;
	    Valid : BOOL;
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  t_s_Info : STRUCT
	    SourceID : DINT;
	    DestinationID : DINT;
	    pThis : ^void;
	    pCallback : ^void;
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  t_e_Entry : STRUCT
	    Header : t_s_Header;
	    Info : t_s_Info;
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  t_s_Data : STRUCT
	    ptr : pVoid;
	    size : UDINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
DataManagerPriority : CLASS_PUBLIC
	TYPE
	  t_e_CallbackState :
	  (
	    _MNG_Sending,
	    _MNG_Sended,
	    _MNG_Received,
	    _MNG_NoReceiverConnected,
	    _MNG_JobDeletet,
	    _MNG_TimeOut,
	    _MNG_GlobalReceiveError
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
GetTaskHandle : CLASS_PUBLIC
	TYPE
	  _ActTask :
	  (
	    AT_Real,
	    AT_Cyclic,
	    AT_Background,
	    AT_NoStdTask
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
MerkerEx : CLASS_PUBLIC
	TYPE
	  Cmdm_udLength :
	  (
	    GET_DATA_PTR,
	    EXCHANGE_DATA_PTR,
	    SAVE_DATA_TO_RAMEXFILE
	  )$UINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
NetworkConfig : CLASS_PUBLIC
	TYPE
	  e_GetOptions :
	  (
	    GET_IDLE,
	    GET_AUTOEXEC,
	    GET_OS
	  )$UDINT;
	  e_SetOptions :
	  (
	    SET_IDLE,
	    SET_AUTOEXEC,
	    SET_OS,
	    SET_BOTH
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
RamRingBuffer : CLASS_PUBLIC
	TYPE
#pragma pack(push, 1)
	  SRR_HEAD : STRUCT
	    No : UDINT;
	    Begin : UDINT;
	    Pos : UDINT;
	    Used : UDINT;
	    RecSize : UDINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
SystemLogging : CLASS_PUBLIC
	TYPE
	  CmdClassSvr :
	  (
	    CMD_LogEventText
	  )$UINT;
	  LogInfo :
	  (
	    _NoInfo,
	    _Error,
	    _Warning,
	    _Debug,
	    _Info
	  )$USINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
TCPCommunication : CLASS_PUBLIC
#include "..\Class\TCPCommunication\TCPCommunication.h"
#include "..\Class\TCPCommunication\SalamanderDelay.h"
	TYPE
	  t_e_ConnectionType :
	  (
	    NotValid,
	    TCPClient,
	    TCPServer,
	    InternConnection
	  )$UDINT;
	  t_e_PackageCmd :
	  (
	    PCMD_Alive,
	    PCMD_Data,
	    PCMD_Acknowledge,
	    PCMD_ConnectionOK,
	    PCMD_ConnectionClosed,
	    PCMD_ConnectionTimeOut,
	    PCMD_TryToConnect,
	    PCMD_ComDeactivated,
	    PCMD_ComActivated
	  )$UDINT;
#pragma pack(push, 1)
	  t_s_Header : STRUCT
	    Commando : t_e_PackageCmd;
	    DestinationID : DINT;
	    SourceID : DINT;
	    JobID : DINT;
	    pThisSource : pVoid;
	    pCallBackSource : pVoid;
	    PackageSize : UDINT;
	  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
	  t_s_LogEntry : STRUCT
	    Header : t_s_Header;
	    Prio : DINT;
	    TimeStamp : UDINT;
	    TimeOut : UDINT;
	    TCPType : DINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
TCPCommunicationLogViewer : CLASS_PUBLIC
#include "..\Class\TCPCommunicationLogViewer\TCPCommunicationLogViewer.h"
	TYPE
	  t_e_ExportState :
	  (
	    ExportState_NoAction,
	    ExportState_Start,
	    ExportState_Ready,
	    ExportState_WaitTouch,
	    ExportState_Error,
	    ExportState_WaitTouch2
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
TitleLine : CLASS_PUBLIC
	TYPE
#pragma pack(push, 1)
	  T_S_EXTVISPARA : STRUCT
	    bParaVar : BOOL;
	    ParaTextscheme : _ANYTHING;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
END_CLASS;
#pragma define (restore)
TouchCalib : CLASS_PUBLIC
	TYPE
	  LSL_TOUCHINFO :
	  (
	    LSL_TOUCHINFO_SERIAL,
	    LSL_TOUCHINFO_ORDERID,
	    LSL_TOUCHINFO_BUS,
	    LSL_TOUCHINFO_VENDOR,
	    LSL_TOUCHINFO_PRODUCT,
	    LSL_TOUCHINFO_FIRMWAREVER
	  )$UDINT;
	END_TYPE
END_CLASS;
#pragma define (restore)
VirtualBaseInit : CLASS_PUBLIC
	TYPE
	  CmdData :
	  (
	    GET_ADD_INFO,
	    READ_DATA,
	    WRITE_DATA,
	    READ_DATA_OFF,
	    WRITE_DATA_OFF
	  )$UINT;
	END_TYPE
END_CLASS;
#pragma define (restore)

#RE_IN_DE

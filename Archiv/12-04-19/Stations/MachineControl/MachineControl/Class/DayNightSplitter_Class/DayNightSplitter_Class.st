//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "DayNightSplitter_Class"
	Revision           = "0.0"
	GUID               = "{A86056C8-C762-4F82-BC81-5085BE83F40F}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	DefCyclictime      = "200 µs"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(750,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{411EB6DF-A778-4FF8-9828-2C80A3F17BC8}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="DayFanMode" GUID="{1FBD3335-DA2B-48B3-95A7-00BB3E4F7129}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="SRam"/>
		<Server Name="DayFanSpeed" GUID="{0FADB6B6-ED29-4CC5-BAFF-150AA70A5CB8}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="SRam"/>
		<Server Name="DayHeaterON" GUID="{0A9D1490-0056-4C9E-8889-9009FCFD21A3}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="SRam"/>
		<Server Name="DaySetRoomTemp" GUID="{3E92F9EB-1A66-490C-B465-B8BB4B7FAC6C}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="SRam"/>
		<Server Name="DaySetTempHZS" GUID="{86E4BED7-5C34-4955-9457-43A0131AE601}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="SRam"/>
		<Server Name="NightFanMode" GUID="{4FEAFD50-0CA6-4B24-B0EB-48F2FE2D3A2C}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="SRam"/>
		<Server Name="NightFanSpeed" GUID="{4F8C6412-E4A3-4622-9941-04CCD33810F6}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="SRam"/>
		<Server Name="NightHeaterOn" GUID="{A3C90C68-39CE-4D4C-8621-AE7FD0DAAB89}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="SRam"/>
		<Server Name="NightSetRoomTemp" GUID="{7779CBAD-C6CA-4089-AED6-FB3425AACFDF}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="SRam"/>
		<Server Name="NightSetTempHZS" GUID="{F832BB1A-CE7C-461A-A6D3-7D29B97E1C4C}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="SRam"/>
		<Client Name="DesiredFanMode" Required="true" Internal="false"/>
		<Client Name="DesiredFanSpeed" Required="true" Internal="false"/>
		<Client Name="DesiredHeaterPWR" Required="true" Internal="false"/>
		<Client Name="DesiredHZSTemp" Required="true" Internal="false"/>
		<Client Name="DesiredRoomTemp" Required="true" Internal="false"/>
		<Client Name="OC_ToTimerClass" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
DayNightSplitter_Class : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	DaySetTempHZS 	: SvrCh_DINT;
	DaySetRoomTemp 	: SvrCh_DINT;
	DayHeaterON 	: SvrCh_DINT;
	DayFanMode 	: SvrCh_DINT;
	DayFanSpeed 	: SvrCh_DINT;
	NightSetTempHZS 	: SvrCh_DINT;
	NightSetRoomTemp 	: SvrCh_DINT;
	NightHeaterOn 	: SvrCh_DINT;
	NightFanMode 	: SvrCh_DINT;
	NightFanSpeed 	: SvrCh_DINT;
  //Clients:
	OC_ToTimerClass 	: CltChCmd_Timer_Class;
	DesiredHZSTemp 	: CltCh_DINT;
	DesiredRoomTemp 	: CltCh_DINT;
	DesiredHeaterPWR 	: CltCh_DINT;
	DesiredFanMode 	: CltCh_DINT;
	DesiredFanSpeed 	: CltCh_DINT;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd Timer_Class


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB DayNightSplitter_Class::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_DAYNIGHTSPLITTER_CLASS
0$UINT, 0$UINT, (SIZEOF(::DayNightSplitter_Class))$UINT, 
11$UINT, 6$UINT, 0$UINT, 
TO_UDINT(1724373636), "DayNightSplitter_Class", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::DayNightSplitter_Class.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::DayNightSplitter_Class.DaySetTempHZS.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(3806433143), "DaySetTempHZS", 
(::DayNightSplitter_Class.DaySetRoomTemp.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(431565869), "DaySetRoomTemp", 
(::DayNightSplitter_Class.DayHeaterON.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(1647582970), "DayHeaterON", 
(::DayNightSplitter_Class.DayFanMode.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(1935424164), "DayFanMode", 
(::DayNightSplitter_Class.DayFanSpeed.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(2752730578), "DayFanSpeed", 
(::DayNightSplitter_Class.NightSetTempHZS.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(433502963), "NightSetTempHZS", 
(::DayNightSplitter_Class.NightSetRoomTemp.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(4086783009), "NightSetRoomTemp", 
(::DayNightSplitter_Class.NightHeaterOn.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(2027836274), "NightHeaterOn", 
(::DayNightSplitter_Class.NightFanMode.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(1137037232), "NightFanMode", 
(::DayNightSplitter_Class.NightFanSpeed.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(3203995738), "NightFanSpeed", 
//Clients:
(::DayNightSplitter_Class.OC_ToTimerClass.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3679558769), "OC_ToTimerClass", TO_UDINT(440431991), "Timer_Class", 0$UINT, 0$UINT, 
(::DayNightSplitter_Class.DesiredHZSTemp.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(4062135007), "DesiredHZSTemp", 
(::DayNightSplitter_Class.DesiredRoomTemp.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(2002045625), "DesiredRoomTemp", 
(::DayNightSplitter_Class.DesiredHeaterPWR.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(4069788526), "DesiredHeaterPWR", 
(::DayNightSplitter_Class.DesiredFanMode.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(3487062664), "DesiredFanMode", 
(::DayNightSplitter_Class.DesiredFanSpeed.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(2524429649), "DesiredFanSpeed", 
END_FUNCTION


#define USER_CNT_DayNightSplitter_Class 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_DayNightSplitter_Class] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION DayNightSplitter_Class::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_DayNightSplitter_Class, pCmd := #vmt.CmdTable);
	vmt.CmdTable.CyWork		:= #CyWork();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	DaySetTempHZS.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF DaySetTempHZS.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	DaySetRoomTemp.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF DaySetRoomTemp.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	DayHeaterON.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF DayHeaterON.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	DayFanMode.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF DayFanMode.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	DayFanSpeed.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF DayFanSpeed.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	NightSetTempHZS.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF NightSetTempHZS.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	NightSetRoomTemp.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF NightSetRoomTemp.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	NightHeaterOn.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF NightHeaterOn.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	NightFanMode.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF NightFanMode.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	NightFanSpeed.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF NightFanSpeed.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL DayNightSplitter_Class::CyWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR

	state := READY;

END_FUNCTION

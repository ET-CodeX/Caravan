//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "AmpFilter_Class"
	Revision           = "0.0"
	GUID               = "{88CDE711-09C7-499A-A6EE-F764D9573039}"
	RealtimeTask       = "true"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(570,180)">
	<Channels>
		<Server Name="ClassSvr" GUID="{02BE690C-87D9-4C1F-B450-61DD42DE2775}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="CorrectedOutput_S" GUID="{45337A00-88A6-4CFE-9C0A-BC9205CC8F0D}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="VoltageImput1_C" Required="true" Internal="false"/>
		<Client Name="VoltageImput2_C" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
AmpFilter_Class : CLASS
	TYPE
	  Type0 : ARRAY [0..999] OF DINT;
	END_TYPE
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	CorrectedOutput_S 	: SvrCh_DINT;
  //Clients:
	VoltageImput1_C 	: CltCh_DINT;
	VoltageImput2_C 	: CltCh_DINT;
  //Variables:
		Counter_VAR 	: DINT;
		DataArray : ARRAY [0..999] OF DINT;

  //Functions:
	
	FUNCTION VIRTUAL GLOBAL RtWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB AmpFilter_Class::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_AMPFILTER_CLASS
0$UINT, 0$UINT, (SIZEOF(::AmpFilter_Class))$UINT, 
2$UINT, 2$UINT, 0$UINT, 
TO_UDINT(1990947712), "AmpFilter_Class", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::AmpFilter_Class.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::AmpFilter_Class.CorrectedOutput_S.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(628348989), "CorrectedOutput_S", 
//Clients:
(::AmpFilter_Class.VoltageImput1_C.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(3610338925), "VoltageImput1_C", 
(::AmpFilter_Class.VoltageImput2_C.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(3581401140), "VoltageImput2_C", 
END_FUNCTION


#define USER_CNT_AmpFilter_Class 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_AmpFilter_Class] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION AmpFilter_Class::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_AmpFilter_Class, pCmd := #vmt.CmdTable);
	vmt.CmdTable.RtWork		:= #RtWork();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL AmpFilter_Class::RtWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  
  
  //Read in
  VoltageImput1_C   :=  VoltageImput1_C.Read();
  VoltageImput2_C   :=  VoltageImput2_C.Read();
  
  
  for Counter_VAR := 0 to 999 by 1 do
  
      DataArray[Counter_VAR] :=  VoltageImput1_C;
     
  
  end_for;
   
    
  
  

	state := READY;

END_FUNCTION
